#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091

source /scripts/common

low="${READSB_AUTOGAIN_LOW_PCT:-2.5}"
high="${READSB_AUTOGAIN_HIGH_PCT:-6.0}"

# this excludes 58 / tuner agc as the step is rather big resulting in oscillations and it's rarely a big improvement to use it
gain_array=(0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6)

autogain_dir="/var/globe_history/autogain"
mkdir -p $autogain_dir

if [[ -f "${autogain_dir}/suspend" ]]; then
    # allow temporary suspending of autogain by touching this file
    exit 0
fi

touch $autogain_dir/strong $autogain_dir/total


# if noise is higher than this, reduce gain
# this is valuable for cases of strong interference where we might not see any messages at all until the gain is lowered
high_noise=-15


# if noise is lower than this, increase gain
# this is valuable for cases of unamplified SDRs combined with bad antennas and a low initial gain setting
low_noise=-36


#work around stupid locale stuff
export LC_ALL=C

stats=/run/readsb/stats.json

if [[ "$1" == "reset" ]]; then
    echo "Reset AutoGain - restarting with initial values and initialization process"
    rm -f $autogain_dir/* >/dev/null 2>&1
    pkill -f "s6-supervise autogain"
    pkill -f "/usr/local/bin/readsb"
    exit 0
fi

if ! [[ -f $stats ]]; then echo "stats.json not found, is the decoder running?"; exit 1; fi

oldstrong=$(cat $autogain_dir/strong 2>/dev/null)
oldtotal=$(cat $autogain_dir/total 2>/dev/null)
if [[ -z $oldstrong ]] || [[ -z $oldtotal ]]; then
	oldstrong=0
	oldtotal=0
fi


newstrong=$(jq '.total.local.strong_signals' < $stats)
newtotal=$(jq '.total.local.accepted | add' < $stats)

noise=$(jq '.last1min.local.noise'< $stats)

if [[ -z $newstrong ]] || [[ -z $newtotal ]]; then
    echo "unrecognized format or no rtl-sdr in use: $stats"
    exit 1
fi

if (( oldtotal > newtotal )) || (( oldstrong > newstrong )); then
	oldstrong=0
	oldtotal=0
fi

strong=$((newstrong - oldstrong))
total=$((newtotal - oldtotal))

#echo "strong: $strong total: $total noise: $noise"

if ! awk "BEGIN{ exit  ($noise > $high_noise) }"; then
    reason="Noise high: $noise dBFS > $high_noise dBFS"
    action=Decreasing
fi

if ! awk "BEGIN{ exit  ($noise < $low_noise) }"; then
    reason="Noise low: $noise dBFS < $low_noise dBFS"
    action=Increasing
else


if [[ -z "$action" ]] && ! awk "BEGIN{ exit  ($total < 500) }"; then
        echo "The decoder hasn't been running long enough, wait a bit!"
        exit 0
    fi
fi

echo "$newstrong" > $autogain_dir/strong
echo "$newtotal" > $autogain_dir/total

if [[ $total == 0 ]]; then
    percent=0
else
    percent=$(awk "BEGIN {printf \"%.3f\", $strong * 100 / $total}")
fi

strong=$percent

if [[ $strong == "nan" ]]; then echo "Error, can't automatically adjust gain!"; exit 1; fi


# Get the gain -- updated for docker-tar1090 use by kx1t
if [[ ! -f $autogain_dir/gain ]]; then
    oldgain="${READSB_AUTOGAIN_INITIAL_GAIN:-49.6}"
    echo "$oldgain" > $autogain_dir/gain
    echo "Initial run. Starting point for adjusting gain is $oldgain"
else
    read -r oldgain < $autogain_dir/gain
    oldgain="${oldgain:-49.6}"    # needed for stupidity reasons
fi

gain_index=28
for i in "${!gain_array[@]}"; do
    if ! awk "BEGIN{ exit  (${oldgain} <= ${gain_array[$i]}) }"; then
        gain_index="${i}"
        break
    fi
done

if ! awk "BEGIN{ exit  (${oldgain} > 49.6) }"; then
    gain_index=28
fi

if [[ "$oldgain" == "-10" ]]; then
    gain_index=28
fi


if ! awk "BEGIN{ exit ($strong > $low) }" && ! awk "BEGIN{ exit ($strong < $high) }"; then
	echo "No gain change needed ($oldgain), ${strong}% percentage of messages >-3dB is in nominal range. (${low}% < ${strong}% < ${high}%)"
	exit 0

fi

if [[ -z "$action" ]] && ! awk "BEGIN{ exit ($strong < $low) }"; then
    reason="${strong}% messages >-3dB exceed lower boundary of ${low}%"
    action=Increasing
fi

if [[ -z "$action" ]] && ! awk "BEGIN{ exit ($strong > $high) }"; then
    reason="${strong}% messages >-3dB exceed upper boundary of ${high}%"
    action=Decreasing
fi

if [[ "$action" == "Decreasing" ]]; then
    gain_index=$((gain_index-1))
elif [[ "$action" == "Increasing" ]]; then
    gain_index=$((gain_index+1))
fi

gain="${gain_array[$gain_index]}"

if (( gain_index < 0 )); then
    echo "Could have used some lower gain, but gain already at minimum! ($reason)"
    exit 0
fi

if [[ "$action" == "Increasing" ]] && [[ $gain == "" ]]; then
    echo "Could have used some more gain, but gain is already at maximum! ($reason)"
    exit 0
fi

# Set the gain -- updated for docker-tar1090 use by kx1t
echo "$gain" > $autogain_dir/gain
# write to special file to change gain while readsb is running instead of restarting the readsb
echo "$gain" > /run/readsb/setGain

echo "$action gain to $gain ($reason)"
