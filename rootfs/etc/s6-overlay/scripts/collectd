#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091

source /scripts/common


if chk_enabled "${GRAPHS1090_DISABLE}" || chk_enabled "${TAR1090_DISABLE}"; then
    exec sleep infinity
fi


PERMFILE=/var/lib/collectd/rrd/localhost.tar.gz
if chk_enabled "${GRAPHS1090_REDUCE_IO}"; then
    # readback rrd database from compressed archive
    s6wrap --quiet --prepend=graphs1090-readback --timestamps --args bash /usr/share/graphs1090/readback.sh
elif [[ -f "${PERMFILE}" ]] && ! [[ -d /var/lib/collectd/rrd/localhost ]]; then
    # extract rrd database from compressed archive (in case  WAS enabled)
    if s6wrap --quiet --prepend=graphs1090-extract --timestamps --args bash /usr/share/graphs1090/gunzip.sh /var/lib/collectd/rrd/localhost; then
        mv -f "${PERMFILE}" "/var/lib/collectd/rrd/auto-backup-old-localhost-tarfile-$(date +%Y-week_%V).tar.gz" &>/dev/null || true
        rm -rf "${PERMFILE}"
    fi
fi


# wait for necessary input file to exist before starting

loop_count=0
# shellcheck disable=SC2016
while [[ ! -e /usr/share/graphs1090/data-symlink/data/stats.json ]]; do
    if (( loop_count++ > 30 )); then echo "[collectd] Waiting for readsb to start..."; sleep 9; fi
    sleep 1
done

# test config?
/usr/sbin/collectd -t -T -f -C /etc/collectd/collectd.conf > /dev/null 2>&1


# pkill -P $$ will only kill children of the script, not the script itself
trap 'pkill -P $$' SIGTERM SIGINT SIGHUP SIGQUIT
# for this scheme to work, the program is started in the background

#shellcheck disable=SC2016
s6wrap --quiet --prepend=collectd --timestamps --args /usr/sbin/collectd -C /etc/collectd/collectd.conf -f &

# the first wait exits due to the signal which is trapped, the 2nd wait actually waits for collectd to exit
wait || wait || true



if chk_enabled "${GRAPHS1090_REDUCE_IO}"; then
    # writeback
    s6wrap --quiet --prepend=graphs1090-writeback --timestamps --args bash /usr/share/graphs1090/writeback.sh
fi
