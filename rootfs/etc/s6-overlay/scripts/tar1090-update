#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091,SC2154

source /scripts/common

if ! chk_enabled "${UPDATE_TAR1090}" || chk_enabled "${TAR1090_DISABLE}"; then
    stop_service
fi

# aircraft-db
if chk_enabled "$TAR1090_ENABLE_AC_DB" && curl --connect-timeout 10 --silent --show-error "https://raw.githubusercontent.com/wiedehopf/tar1090-db/csv/version" > "/run/aircraft.csv.gz.version.new"; then
    if ! diff -q "${TAR1090_UPDATE_DIR}/aircraft.csv.gz.version" "/run/aircraft.csv.gz.version.new" &>/dev/null; then
        "${s6wrap[@]}" echo "Downloading https://raw.githubusercontent.com/wiedehopf/tar1090-db/csv/aircraft.csv.gz"
        if "${s6wrap[@]}" curl --connect-timeout 10 --silent --show-error -o "${TAR1090_UPDATE_DIR}/aircraft.csv.gz.tmp" \
            "https://raw.githubusercontent.com/wiedehopf/tar1090-db/csv/aircraft.csv.gz"; then
            "${s6wrap[@]}" mv -f "${TAR1090_UPDATE_DIR}/aircraft.csv.gz.tmp" "${TAR1090_UPDATE_DIR}/aircraft.csv.gz"
            "${s6wrap[@]}" mv -f "/run/aircraft.csv.gz.version.new" "${TAR1090_UPDATE_DIR}/aircraft.csv.gz.version"
        fi
    fi
fi

if ! chk_enabled "${CUSTOM_HTML}"; then
    OVERRIDE_GIT_SOURCE="/var/tar1090_git_source"

    if [[ -d "${OVERRIDE_GIT_SOURCE}/html" ]]; then
        "${s6wrap[@]}" echo "USING LOCALLY MODIFIED TAR1090 from ${OVERRIDE_GIT_SOURCE}"
        "${s6wrap[@]}" bash /tar1090-install.sh /run/readsb webroot "${TAR1090_INSTALL_DIR}" "${OVERRIDE_GIT_SOURCE}"
        TAR1090_VERSION="$(cat "${OVERRIDE_GIT_SOURCE}/version") LOCALLY MODIFIED"
    else
        "${s6wrap[@]}" bash /tar1090-install.sh /run/readsb webroot "${TAR1090_INSTALL_DIR}"
        TAR1090_VERSION=$(cat "${TAR1090_UPDATE_DIR}/git/version")
    fi

    # Print tar1090 version
    TAR1090_DB_VERSION=$(cat "${TAR1090_UPDATE_DIR}/git-db/version")
    "${s6wrap[@]}" echo "tar1090 version: ${TAR1090_VERSION} tar1090-db version: ${TAR1090_DB_VERSION}"
    export TAR1090_VERSION

    # call the necessary scripts to configure the newly created tar1090 html folder
    # they were already run on container startup but there is no harm in running them again
    "${s6wrap[@]}" bash /etc/s6-overlay/startup.d/04-tar1090-configure
    "${s6wrap[@]}" bash /etc/s6-overlay/startup.d/06-range-outline
fi

if (( UPDATE_TAR1090_DAYS == 0 )); then
    stop_service
fi

exec sleep $(( UPDATE_TAR1090_DAYS * 86400 ))
