#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091

source /scripts/common


if chk_enabled "${TAR1090_DISABLE}"; then
    exit 0
fi

if ! chk_enabled "${GRAPHS1090_DISABLE}"; then
    # add a link to graphs1090 to the tar1090 web page:
    TAR1090_INDEX_HTML="/usr/local/share/tar1090/html-webroot/index.html"
    if ! grep -qs -e 'Stats available <a href=' "$TAR1090_INDEX_HTML"; then
        sed -i 's|\(\s*\)\(<td id="dump1090_total_history_td"><span class="infoBlockTitleText">History:</span> <span id="dump1090_total_history">n/a</span> positions</td>\)|\1\2\n\1</tr>\n\1<tr class="infoblock_body"><td style="width: 50%"><span class="infoBlockTitleText">Stats available <a href="graphs1090/">here</a></td>|g' "$TAR1090_INDEX_HTML"
    fi
fi


# Wipe and configure tar1090 config.js.

rm -f "${TAR1090_INSTALL_DIR}/html-webroot/config.js"
cp "${TAR1090_INSTALL_DIR}/example_config.js" "${TAR1090_INSTALL_DIR}/html-webroot/config.js"

{

echo ""
echo ""
echo "// The following configuration directives produced via '$0':"
echo ""

if [[ -n "$TAR1090_PLANECOUNTINTITLE" ]]; then
  echo "PlaneCountInTitle = ${TAR1090_PLANECOUNTINTITLE};"
fi

if [[ -n "$TAR1090_MESSAGERATEINTITLE" ]]; then
  echo "MessageRateInTitle = ${TAR1090_MESSAGERATEINTITLE};"
fi

if [[ -n "$TAR1090_DISPLAYUNITS" ]]; then
  echo "DisplayUnits = \"${TAR1090_DISPLAYUNITS}\";"
fi

if [[ -n "$TAR1090_DEFAULTCENTERLAT" ]]; then
  echo "DefaultCenterLat = ${TAR1090_DEFAULTCENTERLAT};"
fi

if [[ -n "$TAR1090_DEFAULTCENTERLON" ]]; then
  echo "DefaultCenterLon = ${TAR1090_DEFAULTCENTERLON};"
fi

if [[ -n "$TAR1090_DEFAULTZOOMLVL" ]]; then
  echo "DefaultZoomLvl = ${TAR1090_DEFAULTZOOMLVL};"
fi

if [[ -n "$TAR1090_SITESHOW" ]]; then
  echo "SiteShow = ${TAR1090_SITESHOW};"
fi

if [[ -n "$TAR1090_SITELAT" ]]; then
  echo "SiteLat = ${TAR1090_SITELAT};"
fi

if [[ -n "$TAR1090_SITELON" ]]; then
  echo "SiteLon = ${TAR1090_SITELON};"
fi

if [[ -n "$TAR1090_SITENAME" ]]; then
  echo "SiteName = \"${TAR1090_SITENAME}\";"
fi

if chk_disabled "${TAR1090_ENABLE_ACTUALRANGE}"; then
  echo "actual_range_show = false;"
fi  

if [[ -n "$TAR1090_RANGE_OUTLINE_COLOR" ]]; then
  echo "range_outline_color = '${TAR1090_RANGE_OUTLINE_COLOR}';"
fi

if [[ -n "$TAR1090_RANGE_OUTLINE_WIDTH" ]]; then
  echo "range_outline_width = ${TAR1090_RANGE_OUTLINE_WIDTH};"
fi

if [[ -n "$TAR1090_RANGE_OUTLINE_COLORED_BY_ALTITUDE" ]]; then
  echo "range_outline_colored_by_altitude = ${TAR1090_RANGE_OUTLINE_COLORED_BY_ALTITUDE};"
fi

if [[ -n "$TAR1090_RANGE_OUTLINE_DASH" ]]; then
  echo "range_outline_dash = ${TAR1090_RANGE_OUTLINE_DASH};"
fi

if [[ -n "$TAR1090_ACTUAL_RANGE_OUTLINE_COLOR" ]]; then
  echo "actual_range_outline_color = '${TAR1090_ACTUAL_RANGE_OUTLINE_COLOR}';"
fi

if [[ -n "$TAR1090_ACTUAL_RANGE_OUTLINE_WIDTH" ]]; then
  echo "actual_range_outline_width = ${TAR1090_ACTUAL_RANGE_OUTLINE_WIDTH};"
fi

if [[ -n "$TAR1090_ACTUAL_RANGE_OUTLINE_DASH" ]]; then
  echo "actual_range_outline_dash = ${TAR1090_ACTUAL_RANGE_OUTLINE_DASH};"
fi

if [[ -n "$TAR1090_MAPTYPE_TAR1090" ]]; then
  echo "MapType_tar1090 = \"${TAR1090_MAPTYPE_TAR1090}\";"
fi

if [[ -n "$TAR1090_MAPDIM" ]]; then
  echo "MapDim = ${TAR1090_MAPDIM};"
fi

if [[ -n "$TAR1090_MAPDIMPERCENTAGE" ]]; then
  echo "mapDimPercentage = ${TAR1090_MAPDIMPERCENTAGE};"
fi

if [[ -n "$TAR1090_MAPCONTRASTPERCENTAGE" ]]; then
  echo "mapContrastPercentage = ${TAR1090_MAPCONTRASTPERCENTAGE};"
fi

if [[ -n "$TAR1090_RANGERINGS" ]]; then
  echo "SiteCircles = ${TAR1090_RANGERINGS};"
fi

if [[ -n "$TAR1090_RANGERINGSDISTANCES" ]]; then
  echo "SiteCirclesDistances = new Array($TAR1090_RANGERINGSDISTANCES);"
fi

if [[ -n "$TAR1090_BINGMAPSAPIKEY" ]]; then
  echo "BingMapsAPIKey = \"$TAR1090_BINGMAPSAPIKEY\";"
fi

if chk_enabled "$TAR1090_FLIGHTAWARELINKS"; then
  echo "flightawareLinks = true;"
fi

if [[ -n "$TAR1090_IMAGE_CONFIG_LINK" ]]; then
  echo "imageConfigLink = ${TAR1090_IMAGE_CONFIG_LINK};"
fi

if [[ -n "$TAR1090_IMAGE_CONFIG_TEXT" ]]; then
  echo "imageConfigText = ${TAR1090_IMAGE_CONFIG_TEXT};"
fi

if [[ -n "$TAR1090_RANGERINGSCOLORS" ]]; then
  echo "SiteCirclesColors = new Array($TAR1090_RANGERINGSCOLORS);"
fi

if [[ -n "$TAR1090_PAGETITLE" ]]; then
  echo "PageName = \"$TAR1090_PAGETITLE\";"
fi

if [[ -n "$TAR1090_DWDLAYERS" ]]; then
  echo "dwdLayers = \"$TAR1090_DWDLAYERS\";"
fi

if [[ -n "$TAR1090_LABELZOOM" ]]; then
  echo "labelZoom = \"$TAR1090_LABELZOOM\";"
fi

if [[ -n "$TAR1090_LABELZOOMGROUND" ]]; then
  echo "labelZoomGround = \"$TAR1090_LABELZOOMGROUND\";"
fi

if chk_enabled "$TAR1090_USEROUTEAPI"; then
  echo "useRouteAPI = true;"
fi

if [[ -n "$TAR1090_ROUTEAPIURL" ]]; then
  echo "routeApiUrl = ${TAR1090_ROUTEAPIURL};"
fi

if [[ -n "$TAR1090_AISCATCHER_SERVER" ]]; then
  # remove /geojson suffix if present
  echo "aiscatcher_server = \" ${TAR1090_AISCATCHER_SERVER//\/geojson/}\";"
  echo "aiscatcher_refresh = ${TAR1090_AISCATCHER_REFRESH:-15};"
fi

if [[ -n "$TAR1090_CONFIGJS_APPEND" ]]; then
  echo "$TAR1090_CONFIGJS_APPEND"
fi

} >> "${TAR1090_INSTALL_DIR}/html-webroot/config.js"

# https://github.com/wiedehopf/adsb-wiki/wiki/offline-map-tiles-tar1090
# volumes:
# - /usr/local/share/osm_tiles_offline:/usr/local/share/osm_tiles_offline
# in case offlinemaps is used, configure via config.js
MAX_OFFLINE=""
for i in {0..15}; do
    if [[ -d /usr/local/share/osm_tiles_offline/$i ]]; then
        MAX_OFFLINE=$i
    fi
done
if [[ -n "$MAX_OFFLINE" ]]; then
    echo "offlineMapDetail=$MAX_OFFLINE;" >> "${TAR1090_INSTALL_DIR}/html-webroot/config.js"
fi

if chk_enabled "$TAR1090_LABEL_GROUND_SHOWALL"; then
  sed -i 's/this.speed > 5/this.speed >= 0/' "${TAR1090_INSTALL_DIR}/html-webroot/planeObject_*.js" >/dev/null 2>&1 || true
fi
